name: Deploy

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.output.outputs.ec2_public_ip }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
      
      - name: Terraform Init, Apply & Output
        id: output
        run: |
          cd infra

          # temporarily move backend.tf
          mv backend.tf backend.tf.bak

          terraform init
          terraform validate
          terraform apply -auto-approve

          echo "ec2_public_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT

          # restore backend.tf
          mv backend.tf.bak backend.tf

          # migrate state to S3
          echo "yes" | terraform init -migrate-state


  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Create dynamic inventory
        run: |
          mkdir -p ansible
          echo "[web]" > ansible/hosts.ini
          echo "${{ needs.terraform.outputs.ec2_ip }}" >> ansible/hosts.ini

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass python3-pip
          pip install ansible

      - name: Set up SSH private key
        run: |
          export SSH_KEY_PATH="$HOME/.ssh/devops-key-eu-central.pem"
          mkdir -p "$(dirname "$SSH_KEY_PATH")"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > "$SSH_KEY_PATH"
          chmod 600 "$SSH_KEY_PATH"
          echo -e "Host *\n\tStrictHostKeyChecking no\n\tIdentityFile $SSH_KEY_PATH\n" > ~/.ssh/config

      - name: Run Ansible playbook
        run: |
          cd ansible
          cat hosts.ini  # for debug
          ansible-playbook -i hosts.ini playbook.yml
